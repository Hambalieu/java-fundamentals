/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;


import java.nio.file.Path;
import java.nio.file.Paths;

    class AppTest {

        @Test
        @DisplayName("Many Errors")
        void testLinter() {
            String path = "./src/main/resources/gates.js";
            String expected =
                    "Line 3: Missing semicolon.\n" +
                            "Line 5: Missing semicolon.\n" +
                            "Line 11: Missing semicolon.\n" +
                            "Line 13: Missing semicolon.\n" +
                            "Line 15: Missing semicolon.\n" +
                            "Line 26: Missing semicolon.\n" +
                            "Line 28: Missing semicolon.\n" +
                            "Line 32: Missing semicolon.\n" +
                            "Line 36: Missing semicolon.\n" +
                            "Line 40: Missing semicolon.\n" +
                            "Line 41: Missing semicolon.\n" +
                            "Line 50: Missing semicolon.\n" +
                            "Line 51: Missing semicolon.\n" +
                            "Line 59: Missing semicolon.\n" +
                            "Line 60: Missing semicolon.\n" +
                            "Line 61: Missing semicolon.\n" +
                            "Line 62: Missing semicolon.\n" +
                            "Line 64: Missing semicolon.\n" +
                            "Line 70: Missing semicolon.\n" +
                            "Line 71: Missing semicolon.\n" +
                            "Line 72: Missing semicolon.\n" +
                            "Line 73: Missing semicolon.\n" +
                            "Line 74: Missing semicolon.\n" +
                            "Line 76: Missing semicolon.\n" +
                            "Line 77: Missing semicolon.\n" +
                            "Line 78: Missing semicolon.\n" +
                            "Line 79: Missing semicolon.\n" +
                            "Line 80: Missing semicolon.\n" +
                            "Line 82: Missing semicolon.\n" +
                            "Line 83: Missing semicolon.\n" +
                            "Line 84: Missing semicolon.\n" +
                            "Line 85: Missing semicolon.\n" +
                            "Line 86: Missing semicolon.\n" +
                            "Line 88: Missing semicolon.\n" +
                            "Line 89: Missing semicolon.\n" +
                            "Line 90: Missing semicolon.\n" +
                            "Line 91: Missing semicolon.\n" +
                            "Line 92: Missing semicolon.\n" +
                            "Line 94: Missing semicolon.\n" +
                            "Line 95: Missing semicolon.\n" +
                            "Line 96: Missing semicolon.\n" +
                            "Line 97: Missing semicolon.\n" +
                            "Line 98: Missing semicolon.\n" +
                            "Line 99: Missing semicolon.\n" +
                            "Line 100: Missing semicolon.\n" +
                            "Line 101: Missing semicolon.\n";
            String response = App.linter(path);
            assertEquals(expected, response);
        }

        @Test
        @DisplayName("No Errors")
        void testLinterNoErrors() {
            String path = "./src/main/java/resources/noerror.js";
            String expected = "File has no errors!";
            String response = App.linter(path);
            System.out.println(response);
        }

        @Test
        @DisplayName("One Error")
        void testLinterOneError() {
            String path = "./src/main/resources/one.js";
            String expected = "Line 3: Missing semicolon.\n" ;
            String response = App.linter(path);
            assertEquals(expected, response);
        }
        @Test
        @DisplayName("Empty file")
        void testLinterisEmpty() {
            String path = "./src/main/resources/empty.js";
            String expected = "File is empty!";
            String response = App.linter(path);
            assertEquals(expected, response);
        }
        @Test
        @DisplayName("Few errors ")
        void testLinterFewError() {
            String path = "./src/main/resources/few.js";
            String expected = "Line 1: Missing semicolon.\n" +
                    "Line 3: Missing semicolon.\n" +
                    "Line 5: Missing semicolon.\n" +
                    "Line 7: Missing semicolon.\n" +
                    "Line 9: Missing semicolon.\n" ;
            String response = App.linter(path);
            assertEquals(expected, response);
        }

    }
